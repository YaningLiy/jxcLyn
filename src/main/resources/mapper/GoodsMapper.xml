<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lyn.jxc.dao.GoodsDao">
    <resultMap id="BaseResultMap" type="com.lyn.jxc.entity.Goods">
        <result column="goods_id" property="goodsId" jdbcType="INTEGER"/>
        <result column="goods_code" property="goodsCode" jdbcType="VARCHAR"/>
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
        <result column="inventory_quantity" property="inventoryQuantity" jdbcType="INTEGER"/>
        <result column="last_purchasing_price" property="lastPurchasingPrice" jdbcType="DECIMAL"/>
        <result column="min_num" property="minNum" jdbcType="INTEGER"/>
        <result column="goods_model" property="goodsModel" jdbcType="VARCHAR"/>
        <result column="goods_producer" property="goodsProducer" jdbcType="VARCHAR"/>
        <result column="purchasing_price" property="purchasingPrice" jdbcType="DECIMAL"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="selling_price" property="sellingPrice" jdbcType="DECIMAL"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="goods_unit" property="goodsUnit" jdbcType="VARCHAR"/>
        <result column="goods_type_id" property="goodsTypeId" jdbcType="INTEGER"/>
        <result column="goods_type_name" property="goodsTypeName" jdbcType="VARCHAR"/>
    </resultMap>
    <insert id="insert">
        insert into t_goods
        values (null, #{goodsCode}, #{goodsName}, #{inventoryQuantity}, #{minNum}, #{goodsModel}, #{goodsProducer},
                #{purchasingPrice}, #{lastPurchasingPrice}, #{remarks}, #{sellingPrice}, #{state}, #{goodsUnit},
                #{goodsTypeId})
    </insert>
    <update id="update">
        update t_goods
        <set>
            <if test="goodsCode != '' and goodsCode != null">
                goods_code = #{goodsCode},
            </if>
            <if test="goodsName != '' and goodsName != null">
                goods_name = #{goodsName},
            </if>
            <if test="inventoryQuantity != null">
                inventory_quantity = #{inventoryQuantity},
            </if>
            <if test="minNum != '' and minNum != null">
                min_num = #{minNum},
            </if>
            <if test="goodsModel != '' and goodsModel != null">
                goods_model = #{goodsModel},
            </if>
            <if test="goodsProducer != '' and goodsProducer != null">
                goods_producer = #{goodsProducer},
            </if>
            <if test="purchasingPrice != '' and purchasingPrice != null">
                purchasing_price = #{purchasingPrice},
            </if>
            <if test="lastPurchasingPrice != '' and lastPurchasingPrice != null">
                last_purchasing_price = #{lastPurchasingPrice},
            </if>
            <if test="remarks != '' and remarks != null">
                remarks = #{remarks},
            </if>
            <if test="sellingPrice != '' and sellingPrice != null">
                selling_price = #{sellingPrice},
            </if>
            <if test="state != '' and state != null">
                state = #{state},
            </if>
            <if test="goodsUnit != '' and goodsUnit != null">
                goods_unit = #{goodsUnit},
            </if>
            <if test="goodsTypeId != '' and goodsTypeId != null">
                goods_type_id = #{goodsTypeId},
            </if>
        </set>
        where t_goods.goods_id = #{goodsId}
    </update>
    <delete id="delete">
        delete
        from t_goods
        where goods_id = #{goodsId}
    </delete>
    <select id="listInventory" resultType="com.lyn.jxc.entity.Goods">
        select
        t_goods.goods_id,
        t_goods.goods_name,
        t_goods.goods_code,
        t_goods.goods_type_id,
        t_goods_type.p_id,
        t_goods.inventory_quantity,
        t_goods.last_purchasing_price,
        t_goods.min_num,
        t_goods.goods_model,
        t_goods.goods_producer,
        t_goods.purchasing_price,
        t_goods.remarks,
        t_goods.selling_price,
        t_goods.state,
        t_goods.goods_unit,
        t_goods_type.goods_type_name
        from t_goods left join t_goods_type on t_goods.goods_type_id = t_goods_type.goods_type_id
        <where>
            <if test="goodsTypeId !=null and goodsTypeId!=''">
                and ( t_goods.goods_type_id = #{goodsTypeId} or t_goods_type.p_id = #{goodsTypeId})
            </if>
            <if test="codeOrName !=null and codeOrName !=''">
                and (goods_code like concat('%',#{codeOrName},'%') or goods_name like concat('%',#{codeOrName},'%'))
            </if>
        </where>
        limit #{offset}, #{rows}

    </select>
    <select id="getGoodsCount" resultType="java.lang.Integer">
        select count(1)
        from t_goods
        LEFT JOIN t_goods_type ON t_goods.goods_type_id = t_goods_type.goods_type_id
        <where>
            <if test="goodsTypeId !=null and goodsTypeId !=''">
                and (t_goods.goods_type_id = #{goodsTypeId} OR
                t_goods_type.p_id = #{goodsTypeId})
            </if>
            <if test="codeOrName !=null and codeOrName !=''">
                and goods_name = #{codeOrName}
            </if>
        </where>
    </select>
    <select id="getGoodsInventoryCount" resultType="java.lang.Integer">
        select count(1)
        from t_goods
        LEFT JOIN t_goods_type ON t_goods.goods_type_id = t_goods_type.goods_type_id
        <where>
            <if test="goodsTypeId !=null and goodsTypeId!=''">
                and (goods_type_id = #{goodsTypeId} OR
                t_goods_type.p_id = #{goodsTypeId})
            </if>
            <if test="codeOrName !=null and codeOrName !=''">
                and (goods_code = #{codeOrName} or goods_name = #{codeOrName})
            </if>
        </where>
    </select>
    <select id="list" resultType="com.lyn.jxc.entity.Goods">
        select
        t_goods.goods_id,
        t_goods.goods_name,
        t_goods.goods_code,
        t_goods.goods_type_id,
        t_goods_type.p_id,
        t_goods.inventory_quantity,
        t_goods.last_purchasing_price,
        t_goods.min_num,
        t_goods.goods_model,
        t_goods.goods_producer,
        t_goods.purchasing_price,
        t_goods.remarks,
        t_goods.selling_price,
        t_goods.state,
        t_goods.goods_unit,
        t_goods_type.goods_type_name
        from t_goods left join t_goods_type on t_goods.goods_type_id = t_goods_type.goods_type_id
        <where>
            <if test="goodsTypeId !=null and goodsTypeId !=''">
                AND
                (
                t_goods.goods_type_id = #{goodsTypeId} OR
                t_goods_type.p_id = #{goodsTypeId}
                )
            </if>
            <if test="goodsName !=null and goodsName !=''">
                and goods_name like concat('%',#{goodsName},'%')
            </if>
        </where>
        limit #{offset}, #{rows}
    </select>
    <select id="getGoods" resultMap="BaseResultMap">
        select t_goods.goods_id,
               t_goods.goods_code,
               t_goods.goods_name,
               t_goods.inventory_quantity,
               t_goods.last_purchasing_price,
               t_goods.min_num,
               t_goods.goods_model,
               t_goods.goods_producer,
               t_goods.purchasing_price,
               t_goods.remarks,
               t_goods.selling_price,
               t_goods.state,
               t_goods.goods_unit,
               t_goods.goods_type_id
        FROM jxc.t_goods
        where goods_id = #{goodsId}
    </select>
    <select id="getNoInventoryQuantity" resultMap="BaseResultMap">
        select
        t_goods.goods_id,
        t_goods.goods_code,
        t_goods.goods_name,
        t_goods.inventory_quantity,
        t_goods.last_purchasing_price,
        t_goods.min_num,
        t_goods.goods_model,
        t_goods.goods_producer,
        t_goods.purchasing_price,
        t_goods.remarks,
        t_goods.selling_price,
        t_goods.state,
        t_goods.goods_unit,
        t_goods.goods_type_id,
        t_goods_type.goods_type_name
        from t_goods left join t_goods_type on t_goods.goods_type_id = t_goods_type.goods_type_id
        <where>
            <if test="nameOrCode !=null and nameOrCode !=''">
                and (goods_code like concat('%',#{nameOrCode},'%') or goods_name like concat('%',#{nameOrCode},'%'))
            </if>
            and t_goods.inventory_quantity &lt;= 0
        </where>
        limit #{offset}, #{rows}
    </select>
    <select id="getNoInventoryQuantityCount" resultType="java.lang.Integer">
        select
        count(1)
        from jxc.t_goods
        <where>
            <if test="nameOrCode !=null and nameOrCode !=''">
                and (goods_code like concat('%',#{nameOrCode},'%') or goods_name like concat('%',#{nameOrCode},'%'))
            </if>
            and t_goods.inventory_quantity &lt;= 0
        </where>
    </select>
    <select id="getHasInventoryQuantity" resultType="com.lyn.jxc.entity.Goods">
        select
        t_goods.goods_id,
        t_goods.goods_code,
        t_goods.goods_name,
        t_goods.inventory_quantity,
        t_goods.last_purchasing_price,
        t_goods.min_num,
        t_goods.goods_model,
        t_goods.goods_producer,
        t_goods.purchasing_price,
        t_goods.remarks,
        t_goods.selling_price,
        t_goods.state,
        t_goods.goods_unit,
        t_goods.goods_type_id,
        t_goods_type.goods_type_name
        from t_goods left join t_goods_type on t_goods.goods_type_id = t_goods_type.goods_type_id
        <where>
            <if test="nameOrCode !=null and nameOrCode !=''">
                and (goods_code like concat('%',#{nameOrCode},'%') or goods_name like concat('%',#{nameOrCode},'%'))
            </if>
            and t_goods.inventory_quantity > 0
        </where>
        limit #{offset}, #{rows}
    </select>
    <select id="getHasInventoryQuantityCount" resultType="java.lang.Integer">
        select
        count(1)
        from jxc.t_goods
        <where>
            <if test="nameOrCode !=null and nameOrCode !=''">
                and (goods_code like concat('%',#{nameOrCode},'%') or goods_name like concat('%',#{nameOrCode},'%'))
            </if>
            and t_goods.inventory_quantity > 0
        </where>
    </select>
    <select id="ltMinNumGoodsList" resultMap="BaseResultMap">
        select t_goods.goods_id,
               t_goods.goods_name,
               t_goods.goods_code,
               t_goods.goods_type_id,
               t_goods_type.p_id,
               t_goods.inventory_quantity,
               t_goods.last_purchasing_price,
               t_goods.min_num,
               t_goods.goods_model,
               t_goods.goods_producer,
               t_goods.purchasing_price,
               t_goods.remarks,
               t_goods.selling_price,
               t_goods.state,
               t_goods.goods_unit,
               t_goods_type.goods_type_name
        from t_goods
                 left join t_goods_type on t_goods.goods_type_id = t_goods_type.goods_type_id
        where t_goods.inventory_quantity
                  &lt; t_goods.min_num
    </select>
    <select id="ltMinNumGoodsListTest" resultType="com.lyn.jxc.entity.Goods">
        select * from ${page}
    </select>
</mapper>
